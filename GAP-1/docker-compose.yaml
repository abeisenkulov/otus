version: '3'

services:
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always
    environment:
      TZ: "Asia/Almaty"

  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node-exporter
    hostname: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    restart: always
    environment:
      TZ: "Asia/Almaty"

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    hostname: alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    volumes:
      - ./alertmanager-config.yml:/etc/alertmanager/config.yml
      - ./cert_mcfee.cer:/etc/ssl/certs/cert_mcfee.cer
    ports:
      - '9093:9093'
    restart: always
    environment:
      TZ: "Asia/Almaty"

  grafana:
    image: grafana/grafana
    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    container_name: grafana
    hostname: grafana
    restart: always
    environment:
      TZ: "Asia/Almaty"
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8081:8081
#Web nginx
  web:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/index:/usr/share/nginx/html
    links:
      - php
  php:
    image: php:7-fpm

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.4.2
    ports:
      - 9113:9113
    command:
      #- '-nginx.scrape-uri http://web:80/metrics'
      - -nginx.scrape-uri
      - http://web:80/metrics
  blackbox:
    image: prom/blackbox-exporter
    container_name: blackbox
    hostname: blackbox
    ports:
      - 9115:9115
    restart: unless-stopped
    command:
      - "--config.file=/etc/blackbox/blackbox.yaml"
    volumes:
      - ./blackbox:/etc/blackbox
    environment:
      TZ: "Asia/Almaty"

#Mongo
  mongodb:
    image: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db
  mongo-express:
    image: mongo-express
    ports:
      - 8282:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
  mongo_exporter:
    restart: 'always'
    ports:
      - '9001:9001'
    image: gpuliyar/mongo-exporter
    container_name: mongo-exporter-container
    # provide the mongodb service information for the exporter to work
    environment:
      - 'MONGO_SERVICE=mongodb'
      - 'MONGO_PORT=27017'
    depends_on:
      - mongodb
volumes:
  mongo-data:
    driver: local
